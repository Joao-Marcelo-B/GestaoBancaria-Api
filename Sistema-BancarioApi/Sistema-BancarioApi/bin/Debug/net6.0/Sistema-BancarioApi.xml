<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sistema-BancarioApi</name>
    </assembly>
    <members>
        <member name="M:Sistema_BancarioApi.Controllers.ContaController.GerarConta(Sistema_BancarioApi.Data.Dtos.CreateContaDto)">
            <summary>
                Gera uma conta aleatória para um cliente previamente cadastrado no sistema
            </summary>
            <param name="dto">Parâmetro a ser passado pelo corpo da requisição contendo o ClienteId</param>
            <returns>IActionResult</returns>
            <response code="201">Caso a criação seja realizada com sucesso</response>
        </member>
        <member name="M:Sistema_BancarioApi.Controllers.ContaController.GetContas(System.Int32,System.Int32)">
            <summary>
                Recupera as contas de acordo com os parâmetros skip e take
            </summary>
            <param name="skip">Pula a quantidade de objetos informado</param>
            <param name="take">Pega a quantidade de objetos informado</param>
            <returns>IEnumerable</returns>
            <response code="200">Caso seja realizado com sucesso</response>
        </member>
        <member name="M:Sistema_BancarioApi.Controllers.ContaController.GetContaPorId(System.Int32)">
            <summary>
                Recupera uma conta pelo Id
            </summary>
            <param name="id">ID a ser passado para busca</param>
            <returns>IActionResult</returns>
            <response code="200">Caso a busca seja realizada com sucesso</response>
        </member>
        <member name="M:Sistema_BancarioApi.Controllers.ContaController.GetSaldo(Sistema_BancarioApi.Data.Dtos.GetSaldoDto)">
            <summary>
                Recupera o saldo da conta desejada
            </summary>
            <param name="dto">Parâmetro a ser passado pelo corpo da requisição contendo o número da conta e o digito verificador</param>
            <returns>IActionResult</returns>
            <response code="200">Caso a busca seja realizada com sucesso</response>
        </member>
        <member name="M:Sistema_BancarioApi.Controllers.ContaController.Transferir(Sistema_BancarioApi.Data.Dtos.CreateMovimentacoesDto)">
            <summary>
                Método para transferir valores entre contas
            </summary>
            <param name="dto">Esse parâmetro contém informações que relacionam as duas contas para transferências</param>
            <returns>IActionResult</returns>
            <response code="200">Caso a atualização seja realizada com sucesso</response>
        </member>
        <member name="M:Sistema_BancarioApi.Controllers.ContaController.Extrato(Sistema_BancarioApi.Data.Dtos.GetExtratoDto)">
            <summary>
                Gera o Extrato da conta pelo número da conta que é passado como parâmetro
            </summary>
            <param name="numConta">Parâmetro para busca do extrato da conta desejada</param>
            <returns>IEnurable</returns>
            <response code="200">Caso a busca seja realizada com sucesso</response>
        </member>
        <member name="T:Sistema_BancarioApi.Migrations.CriandoBancodeDados">
            <inheritdoc />
        </member>
        <member name="M:Sistema_BancarioApi.Migrations.CriandoBancodeDados.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Sistema_BancarioApi.Migrations.CriandoBancodeDados.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Sistema_BancarioApi.Migrations.CriandoBancodeDados.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
